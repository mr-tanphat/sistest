
(function(b){function d(a){this.input=a;a.attr("type")=="password"&&this.handlePassword();b(a[0].form).submit(function(){if(a.hasClass("placeholder")&&a[0].value==a.attr("placeholder"))a[0].value=""})}d.prototype={show:function(a){if(this.input[0].value===""||a&&this.valueIsPlaceholder()){if(this.isPassword)try{this.input[0].setAttribute("type","text")}catch(b){this.input.before(this.fakePassword.show()).hide()}this.input.addClass("placeholder");this.input[0].value=this.input.attr("placeholder")}},hide:function(){if(this.valueIsPlaceholder()&&this.input.hasClass("placeholder")&&(this.input.removeClass("placeholder"),this.input[0].value="",this.isPassword)){try{this.input[0].setAttribute("type","password")}catch(a){}this.input.show();this.input[0].focus()}},valueIsPlaceholder:function(){return this.input[0].value==this.input.attr("placeholder")},handlePassword:function(){var a=this.input;a.attr("realType","password");this.isPassword=!0;if(b.browser.msie&&a[0].outerHTML){var c=b(a[0].outerHTML.replace(/type=(['"])?password\1/gi,"type=$1text$1"));this.fakePassword=c.val(a.attr("placeholder")).addClass("placeholder").focus(function(){a.trigger("focus");b(this).hide()});b(a[0].form).submit(function(){c.remove();a.show()})}}};var e=!!("placeholder"in document.createElement("input"));b.fn.placeholder=function(){return e?this:this.each(function(){var a=b(this),c=new d(a);c.show(!0);a.focus(function(){c.hide()});a.blur(function(){c.show(!1)});b.browser.msie&&(b(window).load(function(){a.val()&&a.removeClass("placeholder");c.show(!0)}),a.focus(function(){if(this.value==""){var a=this.createTextRange();a.collapse(!0);a.moveStart("character",0);a.select()}}))})}})(jQuery);/* End of File sidecar/lib/jquery/jquery.placeholder.min.js */

!function($){"use strict";var Button=function(element,options){this.$element=$(element)
this.options=$.extend({},$.fn.button.defaults,options)}
Button.prototype.setState=function(state){var d='disabled',$el=this.$element,data=$el.data(),val=$el.is('input')?'val':'html'
state=state+'Text'
data.resetText||$el.data('resetText',$el[val]())
$el[val](data[state]||this.options[state])
setTimeout(function(){state=='loadingText'?$el.addClass(d).attr(d,d):$el.removeClass(d).removeAttr(d)},0)}
Button.prototype.toggle=function(){var $parent=this.$element.parent('[data-toggle="buttons-radio"]')
$parent&&$parent.find('.active').removeClass('active')
this.$element.toggleClass('active')}
$.fn.button=function(option){return this.each(function(){var $this=$(this),data=$this.data('button'),options=typeof option=='object'&&option
if(!data)$this.data('button',(data=new Button(this,options)))
if(option=='toggle')data.toggle()
else if(option)data.setState(option)})}
$.fn.button.defaults={loadingText:'loading...'}
$.fn.button.Constructor=Button
$(function(){$('body').on('click.button.data-api','[data-toggle^=button]',function(e){var $btn=$(e.target)
if(!$btn.hasClass('btn'))$btn=$btn.closest('.btn')
$btn.button('toggle')})})}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-button.js */

!function($){"use strict";var Tooltip=function(element,options){this.init('tooltip',element,options)}
Tooltip.prototype={constructor:Tooltip,init:function(type,element,options){var eventIn,eventOut
this.type=type
this.$element=$(element)
this.options=this.getOptions(options)
this.enabled=true
if(this.options.trigger!='manual'){eventIn=this.options.trigger=='hover'?'mouseenter':'focus'
eventOut=this.options.trigger=='hover'?'mouseleave':'blur'
this.$element.on(eventIn,this.options.selector,$.proxy(this.enter,this))
this.$element.on(eventOut,this.options.selector,$.proxy(this.leave,this))}
this.options.selector?(this._options=$.extend({},this.options,{trigger:'manual',selector:''})):this.fixTitle()},getOptions:function(options){options=$.extend({},$.fn[this.type].defaults,options,this.$element.data())
if(options.delay&&typeof options.delay=='number'){options.delay={show:options.delay,hide:options.delay}}
return options},enter:function(e){var self=$(e.currentTarget)[this.type](this._options).data(this.type)
if(!self.options.delay||!self.options.delay.show)return self.show()
clearTimeout(this.timeout)
self.hoverState='in'
this.timeout=setTimeout(function(){if(self.hoverState=='in')self.show()},self.options.delay.show)},leave:function(e){var self=$(e.currentTarget)[this.type](this._options).data(this.type)
if(this.timeout)clearTimeout(this.timeout)
if(!self.options.delay||!self.options.delay.hide)return self.hide()
self.hoverState='out'
this.timeout=setTimeout(function(){if(self.hoverState=='out')self.hide()},self.options.delay.hide)},show:function(){var $tip,inside,pos,actualWidth,actualHeight,placement,tp
if(this.hasContent()&&this.enabled){$tip=this.tip()
this.setContent()
if(this.options.animation){$tip.addClass('fade')}
placement=typeof this.options.placement=='function'?this.options.placement.call(this,$tip[0],this.$element[0]):this.options.placement
inside=/in/.test(placement)
$tip.remove().css({top:0,left:0,display:'block'}).appendTo(inside?this.$element:document.body)
pos=this.getPosition(inside)
actualWidth=$tip[0].offsetWidth
actualHeight=$tip[0].offsetHeight
switch(inside?placement.split(' ')[1]:placement){case'bottom':tp={top:pos.top+pos.height,left:pos.left+pos.width / 2-actualWidth / 2}
break
case'top':tp={top:pos.top-actualHeight,left:pos.left+pos.width / 2-actualWidth / 2}
break
case'left':tp={top:pos.top+pos.height / 2-actualHeight / 2,left:pos.left-actualWidth}
break
case'right':tp={top:pos.top+pos.height / 2-actualHeight / 2,left:pos.left+pos.width}
break}
$tip.css(tp).addClass(placement).addClass('in')}},isHTML:function(text){return typeof text!='string'||(text.charAt(0)==="<"&&text.charAt(text.length-1)===">"&&text.length>=3)||/^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(text)},setContent:function(){var $tip=this.tip(),title=this.getTitle()
$tip.find('.tooltip-inner')[this.isHTML(title)?'html':'text'](title)
$tip.removeClass('fade in top bottom left right')},hide:function(){var that=this,$tip=this.tip()
$tip.removeClass('in')
function removeWithAnimation(){var timeout=setTimeout(function(){$tip.off($.support.transition.end).remove()},500)
$tip.one($.support.transition.end,function(){clearTimeout(timeout)
$tip.remove()})}
$.support.transition&&this.$tip.hasClass('fade')?removeWithAnimation():$tip.remove()},fixTitle:function(){var $e=this.$element
if($e.attr('title')||typeof($e.attr('data-original-title'))!='string'){$e.attr('data-original-title',$e.attr('title')||'').removeAttr('title')}},hasContent:function(){return this.getTitle()},getPosition:function(inside){return $.extend({},(inside?{top:0,left:0}:this.$element.offset()),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var title,$e=this.$element,o=this.options
title=$e.attr('data-original-title')||(typeof o.title=='function'?o.title.call($e[0]):o.title)
return title},tip:function(){return this.$tip=this.$tip||$(this.options.template)},validate:function(){if(!this.$element[0].parentNode){this.hide()
this.$element=null
this.options=null}},enable:function(){this.enabled=true},disable:function(){this.enabled=false},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass('in')?'hide':'show']()}}
$.fn.tooltip=function(option){return this.each(function(){var $this=$(this),data=$this.data('tooltip'),options=typeof option=='object'&&option
if(!data)$this.data('tooltip',(data=new Tooltip(this,options)))
if(typeof option=='string')data[option]()})}
$.fn.tooltip.Constructor=Tooltip
$.fn.tooltip.defaults={animation:true,placement:'top',selector:false,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:'hover',title:'',delay:0}}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-tooltip.js */

!function($){"use strict";var toggle='[data-toggle="dropdown"]',Dropdown=function(element){var $el=$(element).on('click.dropdown.data-api',this.toggle)
$('html').on('click.dropdown.data-api',function(){$el.parent().removeClass('open')})}
Dropdown.prototype={constructor:Dropdown,toggle:function(e){var $this=$(this),$parent,selector,isActive
if($this.is('.disabled, :disabled'))return
selector=$this.attr('data-target')
if(!selector){selector=$this.attr('href')
selector=selector&&selector.replace(/.*(?=#[^\s]*$)/,'')}
$parent=$(selector)
$parent.length||($parent=$this.parent())
isActive=$parent.hasClass('open')
clearMenus()
if(!isActive)$parent.toggleClass('open')
return false}}
function clearMenus(){$(toggle).parent().removeClass('open')}
$.fn.dropdown=function(option){return this.each(function(){var $this=$(this),data=$this.data('dropdown')
if(!data)$this.data('dropdown',(data=new Dropdown(this)))
if(typeof option=='string')data[option].call($this)})}
$.fn.dropdown.Constructor=Dropdown
$(function(){$('html').on('click.dropdown.data-api',clearMenus)
$('body').on('click.dropdown','.dropdown form',function(e){e.stopPropagation()}).on('click.dropdown.data-api',toggle,Dropdown.prototype.toggle)})}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-dropdown.js */

!function($){"use strict";var Popover=function(element,options){this.init('popover',element,options)}
Popover.prototype=$.extend({},$.fn.tooltip.Constructor.prototype,{constructor:Popover,setContent:function(){var $tip=this.tip(),title=this.getTitle(),content=this.getContent()
$tip.find('.popover-title')[this.isHTML(title)?'html':'text'](title)
$tip.find('.popover-content > *')[this.isHTML(content)?'html':'text'](content)
$tip.removeClass('fade top bottom left right in')},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var content,$e=this.$element,o=this.options
content=$e.attr('data-content')||(typeof o.content=='function'?o.content.call($e[0]):o.content)
return content},tip:function(){if(!this.$tip){this.$tip=$(this.options.template)}
return this.$tip}})
$.fn.popover=function(option){return this.each(function(){var $this=$(this),data=$this.data('popover'),options=typeof option=='object'&&option
if(!data)$this.data('popover',(data=new Popover(this,options)))
if(typeof option=='string')data[option]()})}
$.fn.popover.Constructor=Popover
$.fn.popover.defaults=$.extend({},$.fn.tooltip.defaults,{placement:'right',content:'',template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-popover.js */

!function($){"use strict";var Modal=function(content,options){this.options=options
this.$element=$(content).delegate('[data-dismiss="modal"]','click.dismiss.modal',$.proxy(this.hide,this))}
Modal.prototype={constructor:Modal,toggle:function(){return this[!this.isShown?'show':'hide']()},show:function(){var that=this,e=$.Event('show')
this.$element.trigger(e)
if(this.isShown||e.isDefaultPrevented())return
$('body').addClass('modal-open')
this.isShown=true
escape.call(this)
backdrop.call(this,function(){var transition=$.support.transition&&that.$element.hasClass('fade')
if(!that.$element.parent().length){that.$element.appendTo(document.body)}
that.$element.show()
if(transition){that.$element[0].offsetWidth}
that.$element.addClass('in')
transition?that.$element.one($.support.transition.end,function(){that.$element.trigger('shown')}):that.$element.trigger('shown')})},hide:function(e){e&&e.preventDefault()
var that=this
e=$.Event('hide')
this.$element.trigger(e)
if(!this.isShown||e.isDefaultPrevented())return
this.isShown=false
$('body').removeClass('modal-open')
escape.call(this)
this.$element.removeClass('in')
$.support.transition&&this.$element.hasClass('fade')?hideWithTransition.call(this):hideModal.call(this)}}
function hideWithTransition(){var that=this,timeout=setTimeout(function(){that.$element.off($.support.transition.end)
hideModal.call(that)},500)
this.$element.one($.support.transition.end,function(){clearTimeout(timeout)
hideModal.call(that)})}
function hideModal(that){this.$element.hide().trigger('hidden')
backdrop.call(this)}
function backdrop(callback){var that=this,animate=this.$element.hasClass('fade')?'fade':''
if(this.isShown&&this.options.backdrop){var doAnimate=$.support.transition&&animate
this.$backdrop=$('<div class="modal-backdrop '+animate+'" />').appendTo(document.body)
if(this.options.backdrop!='static'){this.$backdrop.click($.proxy(this.hide,this))}
if(doAnimate)this.$backdrop[0].offsetWidth
this.$backdrop.addClass('in')
doAnimate?this.$backdrop.one($.support.transition.end,callback):callback()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass('in')
$.support.transition&&this.$element.hasClass('fade')?this.$backdrop.one($.support.transition.end,$.proxy(removeBackdrop,this)):removeBackdrop.call(this)}else if(callback){callback()}}
function removeBackdrop(){this.$backdrop.remove()
this.$backdrop=null}
function escape(){var that=this
if(this.isShown&&this.options.keyboard){$(document).on('keyup.dismiss.modal',function(e){e.which==27&&that.hide()})}else if(!this.isShown){$(document).off('keyup.dismiss.modal')}}
$.fn.modal=function(option){return this.each(function(){var $this=$(this),data=$this.data('modal'),options=$.extend({},$.fn.modal.defaults,$this.data(),typeof option=='object'&&option)
if(!data)$this.data('modal',(data=new Modal(this,options)))
if(typeof option=='string')data[option]()
else if(options.show)data.show()})}
$.fn.modal.defaults={backdrop:true,keyboard:true,show:true}
$.fn.modal.Constructor=Modal
$(function(){$('body').on('click.modal.data-api','[data-toggle="modal"]',function(e){var $this=$(this),href,$target=$($this.attr('data-target')||(href=$this.attr('href'))&&href.replace(/.*(?=#[^\s]+$)/,'')),option=$target.data('modal')?'toggle':$.extend({},$target.data(),$this.data())
e.preventDefault()
$target.modal(option)})})}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-modal.js */

!function($){"use strict";var dismiss='[data-dismiss="alert"]',Alert=function(el){$(el).on('click',dismiss,this.close)}
Alert.prototype.close=function(e){var $this=$(this),selector=$this.attr('data-target'),$parent
if(!selector){selector=$this.attr('href')
selector=selector&&selector.replace(/.*(?=#[^\s]*$)/,'')}
$parent=$(selector)
e&&e.preventDefault()
$parent.length||($parent=$this.hasClass('alert')?$this:$this.parent())
$parent.trigger(e=$.Event('close'))
if(e.isDefaultPrevented())return
$parent.removeClass('in')
function removeElement(){$parent.trigger('closed').remove()}
$.support.transition&&$parent.hasClass('fade')?$parent.on($.support.transition.end,removeElement):removeElement()}
$.fn.alert=function(option){return this.each(function(){var $this=$(this),data=$this.data('alert')
if(!data)$this.data('alert',(data=new Alert(this)))
if(typeof option=='string')data[option].call($this)})}
$.fn.alert.Constructor=Alert
$(function(){$('body').on('click.alert.data-api',dismiss,Alert.prototype.close)})}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-alert.js */

!function($){var Datepicker=function(element,options){this.element=$(element);this.rawFormat=options.format||this.element.data('date-format')||'mm/dd/yyyy';this.format=DPGlobal.parseFormat(this.rawFormat);this.possibleChars=DPGlobal.getPossibleDateChars(this.rawFormat);this.picker=$(DPGlobal.template).appendTo(this.element.is("input")?this.element.parent():this.element).on({click:$.proxy(this.click,this),mousedown:$.proxy(this.mousedown,this)});this.isInput=this.element.is('input');this.component=this.element.is('.date')?this.element.find('.add-on'):false;if(this.isInput){this.element.on({focus:$.proxy(this.show,this),blur:$.proxy(this.hide,this),keyup:$.proxy(this.update,this),keydown:$.proxy(this.keydown,this),keypress:$.proxy(this.keypress,this),click:$.proxy(this.click,this)});if(this.element.parent().find('.add-on').length){this.element.parent().find('.add-on').on({click:$.proxy(this.focusShow,this)});}}else{if(this.component){this.component.on('click',$.proxy(this.show,this));}else{this.element.on('click',$.proxy(this.show,this));}}
this.minViewMode=options.minViewMode||this.element.data('date-minviewmode')||0;if(typeof this.minViewMode==='string'){switch(this.minViewMode){case'months':this.minViewMode=1;break;case'years':this.minViewMode=2;break;default:this.minViewMode=0;break;}}
this.viewMode=options.viewMode||this.element.data('date-viewmode')||0;if(typeof this.viewMode==='string'){switch(this.viewMode){case'months':this.viewMode=1;break;case'years':this.viewMode=2;break;default:this.viewMode=0;break;}}
this.startViewMode=this.viewMode;this.weekStart=options.weekStart||this.element.data('date-weekstart')||0;this.enableKeyboard=options.enableKeyboard||true;if(options.languageDictionary){this.languageDictionary(options.languageDictionary);}
this.weekEnd=this.weekStart===0?6:this.weekStart-1;this.dates=options.languageDictionary||{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa","Su"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]};this.fillDow();this.fillMonths();this.update();this.showMode();};Datepicker.prototype={constructor:Datepicker,languageDictionary:function(datesLangDict){var reqPropsIndx,requiredProperties=['days','daysShort','daysMin','months','monthsShort'];for(reqPropsIndx=0;reqPropsIndx<requiredProperties.length;reqPropsIndx++){if(typeof datesLangDict[requiredProperties[reqPropsIndx]]==='undefined'){return false;}}
this.dates=datesLangDict;return true;},getLanguageDictionary:function(){return this.dates;},focusShow:function(e){this.element[0].focus();},show:function(e){this.picker.show();this.height=this.component?this.component.outerHeight():this.element.outerHeight();this.place();$(window).on('resize',$.proxy(this.place,this));if(e){e.stopPropagation();e.preventDefault();}
if(!this.isInput){$(document).on('mousedown',$.proxy(this.hide,this));}
this.element.trigger({type:'show',date:this.date});this.hidden=false;},hide:function(){this.picker.hide();$(window).off('resize',this.place);this.viewMode=this.startViewMode;this.showMode();if(!this.isInput){$(document).off('mousedown',this.hide);}else{if(!this.verifyDate(this.element.val())){this.element.trigger({type:'hide'});return;}}
this.set();this.element.trigger({type:'hide',date:this.date});this.hidden=true;},set:function(){var formated=DPGlobal.formatDate(this.date,this.format);if(!this.isInput){if(this.component){this.element.find('input').prop('value',formated);}
this.element.data('date',formated);}else{this.element.prop('value',formated);}},setValue:function(newDate){if(typeof newDate==='string'){this.date=DPGlobal.parseDate(newDate,this.format).dateObject;}else{this.date=new Date(newDate);}
this.set();this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0);this.fill();},place:function(){var offset={top:0,left:0},target=this.component?this.component:this.element;if(target.is("input"))
{target.parent().css('position','relative');offset=target.position();}
this.picker.css({top:offset.top+this.height,left:offset.left});},verifyDate:function(dateString){return DPGlobal.parseDate(dateString,this.format).inputDateStringWasValid;},verifyInput:function(dateInput){return this.possibleChars.toLowerCase().indexOf(dateInput)!==-1;},update:function(newDate){var dateInput=typeof newDate==='string'?newDate:(this.isInput?this.element.prop('value'):this.element.data('date'));this.date=DPGlobal.parseDate(dateInput,this.format).dateObject;try{this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0);this.fill();}catch(e){}
return true;},fillDow:function(){var dowCnt=this.weekStart;var html='<tr>';while(dowCnt<this.weekStart+7){html+='<th class="dow">'+this.dates.daysMin[(dowCnt++)%7]+'</th>';}
html+='</tr>';this.picker.find('.datepicker-days thead').append(html);},fillMonths:function(){var html='';var i=0;while(i<12){html+='<span class="month">'+this.dates.monthsShort[i++]+'</span>';}
this.picker.find('.datepicker-months td').append(html);},fill:function(){var d=new Date(this.viewDate),year=d.getFullYear(),month=d.getMonth(),currentDate=this.date.valueOf();this.picker.find('.datepicker-days th:eq(1)').text(this.dates.months[month]+' '+year);var prevMonth=new Date(year,month-1,28,0,0,0,0),day=DPGlobal.getDaysInMonth(prevMonth.getFullYear(),prevMonth.getMonth());prevMonth.setDate(day);prevMonth.setDate(day-(prevMonth.getDay()-this.weekStart+7)%7);var nextMonth=new Date(prevMonth);nextMonth.setDate(nextMonth.getDate()+42);nextMonth=nextMonth.valueOf();var html=[];var clsName;while(prevMonth.valueOf()<nextMonth){if(prevMonth.getDay()===this.weekStart){html.push('<tr>');}
clsName='';if(prevMonth.getMonth()<month){clsName+=' old';}else if(prevMonth.getMonth()>month){clsName+=' new';}
if(prevMonth.valueOf()===currentDate){clsName+=' active';}
html.push('<td class="day'+clsName+'">'+prevMonth.getDate()+'</td>');if(prevMonth.getDay()===this.weekEnd){html.push('</tr>');}
prevMonth.setDate(prevMonth.getDate()+1);}
this.picker.find('.datepicker-days tbody').empty().append(html.join(''));var currentYear=this.date.getFullYear();var months=this.picker.find('.datepicker-months').find('th:eq(1)').text(year).end().find('span').removeClass('active');if(currentYear===year){months.eq(this.date.getMonth()).addClass('active');}
html='';year=parseInt(year/10,10)*10;var yearCont=this.picker.find('.datepicker-years').find('th:eq(1)').text(year+'-'+(year+9)).end().find('td');year-=1;for(var i=-1;i<11;i++){html+='<span class="year'+(i===-1||i===10?' old':'')+(currentYear===year?' active':'')+'">'+year+'</span>';year+=1;}
yearCont.html(html);},keypress:function(e){function isFirefoxDeleteOrTabKey(){if(e.keyCode===46&&e.which===0||e.keyCode===9&&e.which===0){return true;}
return false;}
switch(e.keyCode){case 27:case 33:case 34:case 36:case 35:case 37:case 39:case 38:case 40:case 32:case 13:case 8:break;default:if(!isFirefoxDeleteOrTabKey()){var chr=String.fromCharCode(e.which);if(!this.verifyInput(chr)){e.preventDefault();}}
break;}},keydown:function(e){var self=this,sign,day,month,direction,newDate,newViewDate,dateChanged=false,element,isYearBasedMove,yearMultiplier;function _updateDate(type,sign,multiplier){multiplier=multiplier||1;if(type==='months'){newDate=DPGlobal.multiplyMonths(self.date,sign,(1*multiplier));newViewDate=DPGlobal.multiplyMonths(self.viewDate,sign,(1*multiplier));}else{newDate=new Date(self.date);newDate.setDate(self.date.getDate()+(sign*multiplier));newViewDate=new Date(self.viewDate);newViewDate.setDate(self.viewDate.getDate()+(sign*multiplier));}
dateChanged=true;}
switch(e.keyCode){case 27:this.hide();e.preventDefault();break;case 33:case 34:if(!this.enableKeyboard)break;direction=e.keyCode==33?-1:1;yearMultiplier=(e.shiftKey)?12:1;_updateDate('months',direction,yearMultiplier);break;case 36:case 35:if(!this.enableKeyboard)break;direction=e.keyCode==36?-1:1;isYearBasedMove=(e.shiftKey)?true:false;if(isYearBasedMove){if(direction<0){day=1;month=0;}else{day=31;month=11;}
newDate=new Date(self.date.getFullYear(),month,day,0,0,0);newViewDate=new Date(self.viewDate.getFullYear(),month,day,0,0,0);}else{day=(direction<0)?1:0;addmonth=(direction<0)?0:1;newDate=new Date(self.date.getFullYear(),(self.date.getMonth()+addmonth),day,0,0,0);newViewDate=new Date(self.viewDate.getFullYear(),(self.viewDate.getMonth()+addmonth),day,0,0,0);}
dateChanged=true;break;case 37:case 39:if(!this.enableKeyboard)break;direction=e.keyCode==37?-1:1;_updateDate('days',direction);break;case 38:case 40:if(!this.enableKeyboard)break;direction=e.keyCode==38?-1:1;_updateDate('days',direction,7);break;case 32:case 13:this.hide();e.preventDefault();break;default:if(e.shiftKey){e.preventDefault();}
break;}
if(dateChanged){this.date=newDate;this.viewDate=newViewDate;this.setValue(this.date);this.update(this.date);e.preventDefault();this.element.trigger({type:'changeDate',date:this.date});if(this.isInput){element=this.element;}else if(this.component){element=this.element.find('input');}
if(element){element.change();}}},click:function(e){e.stopPropagation();e.preventDefault();var target=$(e.target).closest('span, td, th, input');if(target.length===1){switch(target[0].nodeName.toLowerCase()){case'input':if(this.hidden){this.show();}
break;case'th':switch(target[0].className){case'switch':this.showMode(1);break;case'prev':case'next':this.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate,this.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate)+
DPGlobal.modes[this.viewMode].navStep*(target[0].className==='prev'?-1:1));this.fill();this.set();break;}
break;case'span':if(target.is('.month')){var month=target.parent().find('span').index(target);this.viewDate.setMonth(month);}else{var year=parseInt(target.text(),10)||0;this.viewDate.setFullYear(year);}
if(this.viewMode!==0){this.date=new Date(this.viewDate);this.element.trigger({type:'changeDate',date:this.date,viewMode:DPGlobal.modes[this.viewMode].clsName});}
this.showMode(-1);this.fill();this.set();break;case'td':if(target.is('.day')){var day=parseInt(target.text(),10)||1;var month=this.viewDate.getMonth();if(target.is('.old')){month-=1;}else if(target.is('.new')){month+=1;}
var year=this.viewDate.getFullYear();this.date=new Date(year,month,day,0,0,0,0);this.viewDate=new Date(year,month,Math.min(28,day),0,0,0,0);this.fill();this.set();this.element.trigger({type:'changeDate',date:this.date,viewMode:DPGlobal.modes[this.viewMode].clsName});this.hide();}
break;}}},mousedown:function(e){e.stopPropagation();e.preventDefault();},showMode:function(dir){if(dir){this.viewMode=Math.max(this.minViewMode,Math.min(2,this.viewMode+dir));}
this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();}};$.fn.datepicker=function(option,val){return this.each(function(){var $this=$(this),data=$this.data('datepicker'),options=typeof option==='object'&&option;if(($this).hasClass('dropdown-menu')!==true){if(!data){$this.data('datepicker',(data=new Datepicker(this,$.extend({},$.fn.datepicker.defaults,options))));}
if(typeof option==='string')data[option](val);}});};$.fn.DateVerifier=function(dateString,format){var formatObject=DPGlobal.parseFormat(format);return DPGlobal.parseDate(dateString,formatObject).inputDateStringWasValid;};$.fn.datepicker.defaults={};$.fn.datepicker.Constructor=Datepicker;var DPGlobal={modes:[{clsName:'days',navFnc:'Month',navStep:1},{clsName:'months',navFnc:'FullYear',navStep:1},{clsName:'years',navFnc:'FullYear',navStep:10}],isLeapYear:function(year){return(((year%4===0)&&(year%100!==0))||(year%400===0));},multiplyMonths:function(d,sign,term){var originalDate=d.getDate(),newDate;term=term||1;d.setMonth(d.getMonth()+(sign*term));newDate=d.getDate();if(newDate<originalDate){d.setDate(1);d.setDate(d.getDate()-1);}
return d;},getDaysInMonth:function(year,month){return[31,(DPGlobal.isLeapYear(year)?29:28),31,30,31,30,31,31,30,31,30,31][month];},getPossibleDateChars:function(format){var i,len,chars;chars='0123456789';done:for(i=0,len=format.length;i<len;i++){switch(format.charAt(i)){case'/':case'.':case'-':chars+=format.charAt(i);break done;default:break;}}
return chars;},parseFormat:function(format){var separator=format.match(/[.\/\-\s].*?/),parts=format.split(/\W+/);if(!separator||!parts||parts.length===0){throw new Error("Invalid date format.");}
return{separator:separator,parts:parts};},parseDate:function(dateIn,format){var parts=dateIn.split(format.separator),date=new Date(),isLegalDate=true,val,i,cnt,originalDate,len,monthsSet=false,dayValue=null,isValid=true;isValid=dateIn.lastIndexOf(format.separator)!==-1;date.setHours(0);date.setMinutes(0);date.setSeconds(0);date.setMilliseconds(0);function _setDate(theDay){if(_isInRange(theDay,1,31)){date.setDate(theDay);if(date.getDate()<theDay){date.setDate(0);}}else{isValid=false;}}
function _isInRange(val,min,max){var value=parseInt(val,10);return(!isNaN(value)&&value>=min&&value<=max);}
function century(){return new Date().getFullYear().toString().substr(0,2);}
function twoDigitString(n){return n.toString().length===1?'0'+n:n.toString();}
if(parts.length===format.parts.length){for(i=0,cnt=format.parts.length;i<cnt;i++){if(!parts[i]){return false;}
val=parseInt(parts[i],10);switch(format.parts[i]){case'dd':case'd':if(!monthsSet){dayValue=val;}else{_setDate(val);}
break;case'mm':case'm':if(_isInRange(val,1,12)){originalDate=date.getDate();date.setMonth(val-1);if(date.getDate()<originalDate){date.setDate(0);}
if(dayValue){_setDate(dayValue);}
monthsSet=true;}else{isValid=false;}
break;case'yy':len=val.toString().length;if(len===4&&century()===val.toString().substr(0,2)){date.setFullYear(century()+val.toString().substr(-2));}
else if(_isInRange(val,0,99)){date.setFullYear(century()+twoDigitString(val));}else{isValid=false;}
break;case'yyyy':len=val.toString().length;if(_isInRange(val,0,9999)){if(len<3){date.setFullYear(century()+twoDigitString(val));}
else if(len===3){isValid=false;}else{date.setFullYear(val);}}else{isValid=false;}
break;}}}else{isValid=false;}
return{'dateObject':date,'inputDateStringWasValid':isValid};},formatDate:function(date,format){var val={d:date.getDate(),m:date.getMonth()+1,yy:date.getFullYear().toString().substring(2),yyyy:date.getFullYear()};val.dd=(val.d<10?'0':'')+val.d;val.mm=(val.m<10?'0':'')+val.m;var date=[];for(var i=0,cnt=format.parts.length;i<cnt;i++){date.push(val[format.parts[i]]);}
return date.join(format.separator);},headTemplate:'<thead>'+'<tr>'+'<th class="prev">&lsaquo;</th>'+'<th colspan="5" class="switch"></th>'+'<th class="next">&rsaquo;</th>'+'</tr>'+'</thead>',contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>'};DPGlobal.template='<div class="datepicker dropdown-menu">'+'<div class="datepicker-days">'+'<table class=" table-condensed">'+
DPGlobal.headTemplate+'<tbody></tbody>'+'</table>'+'</div>'+'<div class="datepicker-months">'+'<table class="table-condensed">'+
DPGlobal.headTemplate+
DPGlobal.contTemplate+'</table>'+'</div>'+'<div class="datepicker-years">'+'<table class="table-condensed">'+
DPGlobal.headTemplate+
DPGlobal.contTemplate+'</table>'+'</div>'+'</div>';}(window.jQuery);/* End of File styleguide/assets/js/bootstrap-datepicker.js */

!function($){"use strict"
var Clickover=function(element,options){this.cinit('clickover',element,options);}
Clickover.prototype=$.extend({},$.fn.popover.Constructor.prototype,{constructor:Clickover,cinit:function(type,element,options){this.attr={};this.attr.me=+(new Date);this.attr.click_event_ns="click."+this.attr.me;if(!options)options={};options.trigger='manual';this.init(type,element,options);this.$element.on('click',this.options.selector,$.proxy(this.clickery,this));},clickery:function(e){e.preventDefault();e.stopPropagation();this.options.width&&this.tip().find('.popover-inner').width(this.options.width);this.options.height&&this.tip().find('.popover-inner').height(this.options.height);this.options.tip_id&&this.tip().attr('id',this.options.tip_id);this.toggle();if(this.isShown()){this.options.global_close&&$('body').one(this.attr.click_event_ns,$.proxy(this.hide,this));this.tip().on('click',function(e){e.stopPropagation();});this.tip().on('click','[data-dismiss="clickover"]',$.proxy(this.hide,this));if(this.options.auto_close&&this.options.auto_close>0){this.attr.tid=setTimeout($.proxy(this.hide,this),this.options.auto_close);}
typeof this.options.onShown=='function'&&this.options.onShown.call(this);this.$element.trigger('shown');}
else{$('body').off(this.attr.click_event_ns);if(typeof this.attr.tid=="number"){clearTimeout(this.attr.tid);delete this.attr.tid;}
typeof this.options.onHidden=='function'&&this.options.onHidden.call(this);this.$element.trigger('hidden');}},isShown:function(){return this.tip().hasClass('in');},debughide:function(){var dt=new Date().toString();console.log(dt+": clickover hide");this.hide();}})
$.fn.clickover=function(option){return this.each(function(){var $this=$(this),data=$this.data('clickover'),options=typeof option=='object'&&option
if(!data)$this.data('clickover',(data=new Clickover(this,options)))
if(typeof option=='string')data[option]()})}
$.fn.clickover.Constructor=Clickover
$.fn.clickover.defaults=$.extend({},$.fn.popover.defaults,{trigger:'manual',auto_close:0,global_close:1,onShown:null,onHidden:null,width:null,height:null,tip_id:null})}(window.jQuery);/* End of File styleguide/assets/js/bootstrapx-clickover.js */

/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

/**
 * Portal specific error handlers.
 */
(function(app) {
    app.error = _.extend(app.error);

    function backToLogin(bDismiss) {
        if(bDismiss) app.alert.dismissAll();
        app.router.login();
    }

    function alertUser(key,title,msg) {
        app.alert.show(key, {level: "error", messages: app.lang.getAppString(msg), title:app.lang.get(title), autoClose: true});
    }
    
    /**
     * This is caused by attempt to login with invalid creds. 
     */
    app.error.handleNeedLoginError = function(error) {
        backToLogin(true);
        alertUser("needs_login_error" , "LBL_PORTAL_INVALID_CREDS_TITLE", "LBL_PORTAL_INVALID_CREDS");
    };

    /**
     * This is caused by expired or invalid token. 
     */
    app.error.handleInvalidGrantError = function(error) {
        backToLogin(true);
        alertUser("invalid_grant_error", "LBL_PORTAL_INVALID_GRANT_TITLE", "LBL_PORTAL_INVALID_GRANT");
    };

    /**
     * Client authentication handler. 
     */
    app.error.handleInvalidClientError = function(error) {
        backToLogin(true);
        alertUser("invalid_client_error","LBL_PORTAL_AUTH_FAILED_TITLE","LBL_PORTAL_AUTH_FAILED");
    };
    
    /**
     * Invalid request handler. 
     */
    app.error.handleInvalidRequestError = function(error) {
        backToLogin(true);
        alertUser("invalid_request_error", "LBL_PORTAL_INVALID_REQUEST_TITLE", "LBL_PORTAL_INVALID_REQUEST");
    };

    /**
     * 0 Timeout error handler. If server doesn't respond within timeout.
     */
    app.error.handleTimeoutError = function(error) {
        backToLogin(true);
        alertUser("timeout_error", "LBL_PORTAL_REQUEST_TIMEOUT_TITLE", "LBL_PORTAL_REQUEST_TIMEOUT");
    };

    /**
     * 401 Unauthorized error handler. 
     */
    app.error.handleUnauthorizedError = function(error) {
        backToLogin(true);
        alertUser("unauthorized_request_error", "LBL_PORTAL_UNAUTHORIZED_TITLE", "LBL_PORTAL_UNAUTHORIZED");
    };

    /**
     * 403 Forbidden error handler. 
     */
    app.error.handleForbiddenError = function(error) {
        app.alert.dismissAll();
        // If portal is not configured, return to login screen if necessary
        if(error.code == "portal_not_configured"){
            backToLogin(true);
        }
        alertUser("forbidden_request_error", "LBL_PORTAL_RESOURCE_UNAVAILABLE_TITLE", error.message ? error.message : "LBL_PORTAL_RESOURCE_UNAVAILABLE");
    };
    
    /**
     * 404 Not Found handler. 
     */
    app.error.handleNotFoundError = function(error) {
        app.controller.loadView({
            layout: "error",
            errorType: "404",
            module: "Error",
            create: true
        });    
    };

    /**
     * 405 Method not allowed handler.
     */
    app.error.handleMethodNotAllowedError = function(error) {
        backToLogin(true);
        alertUser("not_allowed_error", "LBL_PORTAL_METHOD_NOT_ALLOWED_TITLE", "LBL_PORTAL_METHOD_NOT_ALLOWED");
    };

    /**
     * 412 Precondtion failure error.
     */
    app.error.handlePreconditionFailureError = function(error) {
        backToLogin(true);
        // TODO: For finer grained control we could sniff the {error: <code>} in the response text (JSON) for one of:
        // missing_parameter, invalid_parameter, request_failure
        alertUser("precondtion_failure_error", "LBL_PORTAL_PRECONDITION_MISSING_TITLE", "LBL_PORTAL_PRECONDITION_MISSING");
    };
       
    /**
     * 500 Internal server error handler. 
     */
    app.error.handleServerError = function(error) {
        app.controller.loadView({
            layout: "error",
            errorType: "500",
            module: "Error",
            create: true
        });
    };

})(SUGAR.App);

/* End of File portal2/error.js */

/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

/**
 * Portal specific user extensions.
 */
(function(app) {
    app.user = _.extend(app.user);

    /**
     * Helper to determine if current user is a support portal user (essentially a Contact with portal enabled);
     * For example, we only show the profile and profile/edit pages if so.
     *
     * @return {Boolean} true if user is of type: support_portal, otherwise false (and user is a "normal user").
     */
    app.user.isSupportPortalUser = function() {
        return this.get('type') === 'support_portal';
    };

})(SUGAR.App);
/* End of File portal2/user.js */

/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

(function(app) {

    // Add custom events here for now
    app.events.on("app:init", function() {

        // Load dashboard route.
        app.router.route("", "dashboard", function() {
            app.controller.loadView({
                layout: "dashboard"
            });
        });

        // Load the search results route.
        app.router.route("search/:query", "search", function(query) {
            // For Safari and FF, the query always comes in as URI encoded.
            // Decode here so we don't accidently double encode it later. (bug55572)
            try{
                var decodedQuery = decodeURIComponent(query);
                app.controller.loadView({
                    mixed: true,
                    module: "Search",
                    layout: "search",
                    query: decodedQuery,
                    skipFetch: true
                });
            }catch(err){
                // If not a validly encoded URI, decodeURIComponent will throw an exception
                // If URI is not valid, don't navigate.
                app.logger.error("Search term not a valid URI component.  Will not route search/"+query);
            }

        });

        // Load the profile
        app.router.route("profile", "profile", function() {
            app.controller.loadView({
                layout: "profile",
                module: "Contacts",
                modelId: app.user.get("id")
            });
        });
        // Loadds profile edit
        app.router.route("profile/edit", "profileedit", function() {
            app.controller.loadView({
                layout: "profile-edit",
                module: "Contacts",
                modelId: app.user.get("id")
            });
        });
    });

    // bug57318: Mulitple alert warning when multiple views get render denied on same page.
    var oHandleRenderError = app.error.handleRenderError;
    app.error.handleRenderError = function(component, method, additionalInfo) {
        function handlePortalRenderDenied(c) {
            var title, message;
            title = app.lang.getAppString('ERR_NO_VIEW_ACCESS_TITLE');
            message = app.utils.formatString(app.lang.getAppString('ERR_NO_VIEW_ACCESS_MSG'),[c.module]);
            // TODO: We can later create some special case handlers if we DO wish to alert warn,
            // but since we have recursive views that's usually going to be overbearing.
            app.logger.warn(title + ":\n" + message);
        }
        // Only hijack view_render_denied error case, otherwise, delegate all else to sidecar handler
        if(method === 'view_render_denied') {
            handlePortalRenderDenied(component);
        } else {
            oHandleRenderError(component, method, additionalInfo);
        }
    };

    var oRoutingBefore = app.routing.before;
    app.routing.before = function(route, args) {
        var dm, nonModuleRoutes;
        nonModuleRoutes = [
            "search",
            "error",
            "profile",
            "profileedit",
            "logout"
        ];

        app.logger.debug("Loading route. " + (route?route:'No route or undefined!'));

        if(!oRoutingBefore.call(this, route, args)) return false;

        function alertUser(msg) {
            // TODO: Error messages should later be put in lang agnostic app strings. e.g. also in layout.js alert.
            msg = msg || "LBL_PORTAL_MIN_MODULES";

            app.alert.show("no-sidecar-access", {
                level: "error",
                title: app.lang.getAppString("LBL_PORTAL_ERROR"),
                messages: [app.lang.getAppString(msg)]
            });
        }

        // Handle index case - get default module if provided. Otherwise, fallback to Home if possible or alert.
        if (route === 'index') {
            dm = typeof(app.config) !== undefined && app.config.defaultModule ? app.config.defaultModule : null;
            if (dm && app.metadata.getModule(dm) && app.acl.hasAccess('read', dm)) {
                app.router.list(dm);
            } else if (app.acl.hasAccess('read', 'Home')) {
                app.router.index();
            } else {
                alertUser();
                return false;
            }
            // If route is NOT index, and NOT in non module routes, check if module (args[0]) is loaded and user has access to it.
        } else if (!_.include(nonModuleRoutes, route) && args[0] && !app.metadata.getModule(args[0]) || !app.acl.hasAccess('read', args[0])) {
            app.logger.error("Module not loaded or user does not have access. ", route);
            alertUser("LBL_PORTAL_ROUTE_ERROR");
            return false;
        }
        return true;
    };

    app.view.SupportPortalField = app.view.Field.extend({
        
        /**
         * Handles how validation errors are appended to the email "sub fields" (inputs).
         *
         * @param {Object} errors hash of validation errors
         */
        handleEmailValidationError: function(emailErrorsArray) {
            var self = this, emails;
            this.$el.find('.control-group.email').removeClass("error");
            emails = this.$el.find('.existing .email');
            
            // Remove any and all previous exclamation then add back per field error
            $(emails).removeClass("error").find('.add-on').remove();

            // For each error add to error help block
            _.each(emailErrorsArray, function(emailWithError, i) {

                // For each of our "sub-email" fields
                _.each(emails, function(e) {
                    var emailFieldValue = $(e).data('emailaddress');

                    // if we're on an email sub field where error occured, add error help block
                    if(emailFieldValue === emailWithError) {
                        
                        // First remove in case already there and then add back. Note add-on and help-block are adjacent
                        $(e).addClass("error").find('.row-fluid .help-block').remove().find('add-on').remove();
                        $(e).find('.row-fluid')
                            .append('<span class="add-on"><i class="icon-exclamation-sign"></i></span><p class="help-block">'+app.error.getErrorString('email', [emailFieldValue])+'</p>');
                    }
                });
            });
        },

        /**
         * Handles how validation errors are appended to the fields dom element
         *
         * By default errors are appended to the dom into a .help-block class if present
         * and the .error class is added to any .control-group elements in accordance with
         * bootstrap.
         *
         * @param {Object} errors hash of validation errors
         */
        handleValidationError: function(errors) {
            var self = this;

            // Email is special case as each input email is a sort of field within the one email 
            // field itself; and we need to append errors directly beneath said sub-fields
            if(self.type==='email' && self.view.name != "signup") {
                self.handleEmailValidationError(errors.email);
                return;
            }

            // need to add error styling to parent view element
            this.$el.parents('.control-group').addClass("error");
            var ftag = this.fieldTag || '';

            // Reset Field
            if (this.$el.parents('.control-group').find('.input-append').length > 0) {
                this.$el.unwrap()
            }
            self.$('.help-block').html('');
            // Remove previous exclamation then add back.
            this.$('.add-on').remove();


            // Add error styling
            this.$el.wrap('<div class="input-append  '+ftag+'">');
            // For each error add to error help block
            _.each(errors, function(errorContext, errorName) {
                self.$('.help-block').append(app.error.getErrorString(errorName, errorContext));
            });
            $('<span class="add-on"><i class="icon-exclamation-sign"></i></span>').insertBefore(this.$('.help-block'));
        },


        bindDomChange: function() {
            if (!(this.model instanceof Backbone.Model)) return;
            var self = this;
            var el = this.$el.find(this.fieldTag);
            // need to clear error styling on data change
            el.on("change", function() {
                self.$el.parent().parent().removeClass("error");
            });
            app.view.Field.prototype.bindDomChange.call(this);
        }
    });

    app.Controller = app.Controller.extend({
        loadView: function(params) {
            var self = this, 
                callbackAppNotAvailable, options;

            // If login page request we always need to present the login page, but we 
            // also must deal with status 'offline' which means portal not enabled.
            if (params.layout === 'login') {
                app.Controller.__super__.loadView.call(this, params);
            }

            if (app.config && app.config.appStatus == 'offline') {

                // We only want to redirect back to login if not already on login!
                if (params.layout !== 'login') {
                    options = {
                        module: "Login",
                        layout: "login",
                        create: true
                    };
                    app.Controller.__super__.loadView.call(self, options);
                }

                callbackAppNotAvailable = function(data) {
                    app.alert.show('appOffline', {
                        level: "error",
                        title: app.lang.getAppString('LBL_PORTAL_ERROR'),
                        messages: app.lang.getAppString('LBL_PORTAL_OFFLINE'),
                        autoclose: false
                    });
                };
                if(app.api.isAuthenticated()) {
                    app.logout({success: callbackAppNotAvailable, error: callbackAppNotAvailable}, {clear:true});
                } else {
                    callbackAppNotAvailable();
                }
                return;
            } 

            // If it wasn't login and wasn't offline we just load'er up
            if (params.layout !== 'login') {
                app.Controller.__super__.loadView.call(this, params);
            }
        }
    });


    /**
     * Extends the `save` action to add `portal` specific params to the payload.
     *
     * @param {Object} attributes(optional) model attributes
     * @param {Object} options(optional) standard save options as described by Backbone docs and
     * optional `fieldsToValidate` parameter.
     */
    var __superBeanSave__ = app.Bean.prototype.save;
    app.Bean.prototype.save = function(attributes, options) {
        //Here is the list of params that must be set for portal use case.
        var defaultParams = {
            portal_flag: 1,
            portal_viewable: 1
        };
        var moduleFields = app.metadata.getModule(this.module).fields || {};
        for (var field in defaultParams) {
            if (moduleFields[field]) {
                this.set(field, defaultParams[field], {silent:true});
            }
        }
        //Call the prototype
        __superBeanSave__.call(this, attributes, options);
    };

    var _rrh = {
        /**
         * Handles `signup` route.
         */
        signup: function() {
            app.logger.debug("Route changed to signup!");
            app.controller.loadView({
                module: "Signup",
                layout: "signup",
                create: true
            });
        }
    };

    app.events.on("app:init", function() {
        // Register portal specific routes
        app.router.route("signup", "signup", _rrh.signup);
    });

    /**
     * Checks if there are `file` type fields in the view. If yes, process upload of the files
     *
     * @param {Object} model Model
     * @param {callbackAppNotAvailable} callbackAppNotAvailable(optional) success and error callbackAppNotAvailable
     */
    // TODO: This piece of code may move in the core files
    app.view.View.prototype.checkFileFieldsAndProcessUpload = function(model, callbackAppNotAvailable) {
        var file, $file, $files, filesToUpload, fileField, successFn, errorFn;

        callbackAppNotAvailable = callbackAppNotAvailable || {};

        // Check if there are attachments
        $files = _.filter($(":file"), function(file) {
            var $file = $(file);
            return ($file.val() && $file.attr("name") && $file.attr("name") !== "") ? $file.val() !== "" : false;
        });

        filesToUpload = $files.length;

        successFn = function() {
            filesToUpload--; 
            if (filesToUpload===0) {
                app.alert.dismiss('upload'); 
                if (callbackAppNotAvailable.success) callbackAppNotAvailable.success();
            }
        };

        errorFn = function(error) {
            var errors = {};
            
            // Set model to new by removing it's id attribute. Note that in our initial attempt
            // to upload file(s) we set delete_if_fails true so server has marked record deleted: 1
            // Since we may have only create privs (e.g. we can't edit/delete Notes), we'll start anew.  
            model.unset('id', {silent: true});

            // All or nothing .. if uploading 1..* attachments, if any one fails the whole atomic
            // operation has failed; so we really want to trigger error and possibly and start over.
            filesToUpload = 0;
            app.alert.dismiss('upload');
            errors[error.responseText] = {};
            model.trigger('error:validation:' + this.field, errors);
            model.trigger('error:validation');
        };

        // Process attachment uploads
        if (filesToUpload > 0) {
            app.alert.show('upload', {level: 'process', title: app.lang.get('LBL_UPLOADING', model.module), autoclose: false});

            // Field by field
            for (file in $files) {
                $file = $($files[file]);
                fileField = $file.attr("name");

                model.uploadFile(fileField, $file, {
                    field: fileField,
                    success: successFn,
                    error: errorFn
                });
            }
        } else {
            if (callbackAppNotAvailable.success) callbackAppNotAvailable.success();
        }
    };

})(SUGAR.App);
/* End of File portal2/portal.js */

/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/

(function(app) {

    /**
     * Overrides View::_renderHtml() to enable bootstrap widgets after the element has been added to the DOM
     */
    var __superViewRender__ = app.view.View.prototype._renderHtml;
    app.view.View.prototype._renderHtml = function() {

        __superViewRender__.call(this);

        // do this if greater than 768px page width
        if ($(window).width() > 768) {
            this.$("[rel=tooltip]").tooltip({ placement: "bottom" });
        }
        //popover
        this.$("[rel=popover]").popover();
        this.$("[rel=popoverTop]").popover({placement: "top"});

        if ($.fn.timeago) {
            $("span.relativetime").timeago({
                logger: SUGAR.App.logger,
                date: SUGAR.App.date,
                lang: SUGAR.App.lang,
                template: SUGAR.App.template
            });
        }
        /**
         * Fix placeholder on global search on IE and old browsers
         */
        this.$("input[placeholder]").placeholder();
    };

    /**
     * Overrides View::initialize() to remove the bootstrap widgets element from all the page
     * The widget is actually bind to an element that will be removed from the DOM when the view changes. So we need to
     * manually remove elements automatically created by the widget.
     */
    var __superViewInit__ = app.view.View.prototype.initialize;
    app.view.View.prototype.initialize = function(options) {
        __superViewInit__.call(this, options);
        $('.popover, .tooltip').remove();
    };

    /**
     * Overrides Field::_render() to fix placeholders on IE and old browsers
     */
    var __superFieldRender__ = app.view.SupportPortalField.prototype._render;
    app.view.SupportPortalField.prototype._render = function() {
        _.each(this.$('[rel="tooltip"]'), function(element) {
            $(element).tooltip('hide');
        })
        __superFieldRender__.call(this);
        this.$("input[placeholder]").placeholder();
    };


})(SUGAR.App);
/* End of File portal2/portal-ui.js */

!function( $ ) {

 "use strict"

  var PopoverExt = function ( element, options ) {
    this.init('popoverext', element, options);
  }

  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js
     ========================================== */

  PopoverExt.prototype = $.extend({}, $.fn.popover.Constructor.prototype, {

    constructor: PopoverExt
  , init: function ( type, element, options ) {
      var eventIn
        , eventOut;

      this.type = type;
      this.$element = $(element);
      this.options = this.getOptions(options);
      this.enabled = true ;

      if (this.options.trigger != 'manual') {
        eventIn  = this.options.trigger == 'hover' ? 'mouseenter' : 'focus' ;
        eventOut = this.options.trigger == 'hover' ? 'mouseleave' : 'blur' ;
        this.$element.on(eventIn, this.options.selector, $.proxy(this.enter, this));
        this.$element.on(eventOut, this.options.selector, $.proxy(this.leave, this));
      }

      //console.log(this.tip())
      var $tip = this.tip();


      this.options.selector ?
        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
        this.fixTitle();
    }
    
  , setContent: function () {
      var $tip = this.tip()
        , title = this.getTitle()
        , content = this.getContent()
        , footer = this.getFooter();

      $tip.find('.popover-title')[ $.type(title) == 'object' ? 'append' : 'html' ](title);
      $tip.find('.popover-content > *')[ $.type(content) == 'object' ? 'append' : 'html' ](content);
      $tip.find('.popover-footer')[ $.type(footer) == 'object' ? 'append' : 'html' ](footer);

      $tip.removeClass('fade top bottom left right in');
    }

  , hasContent: function () {
      return this.getTitle() || this.getContent();
    }
    
    
  , setId: function() {
		var $tip;
		if(this.options.id) {
			$tip = this.tip();
			$tip.attr("id",this.$element.attr("id") + "Popover");
		}
	}
  , show: function () {
      var $tip
        , inside
        , pos
        , actualWidth
        , actualHeight
        , placement
        , tp;
        

      if (this.hasContent() && this.enabled) {
        $tip = this.tip();
        this.setContent();
        this.setId();

        if (this.options.animation) {
          $tip.addClass('fade');
        }

        placement = typeof this.options.placement == 'function' ?
          this.options.placement.call(this, $tip[0], this.$element[0]) :
            this.options.placement;

        inside = /in/.test(placement);

        $tip
          .remove()
          .css({ top: 0, left: 0, display: 'block' })
          .appendTo(inside ? this.$element : document.body);

        if(this.options.hideOnBlur) {
        $tip
          .attr("tabindex","-1")
          .on("blur", $.proxy(this.hide, this))
          .trigger("focus");
        }

        pos = this.getPosition(inside);
        actualWidth = $tip[0].offsetWidth;
        actualHeight = $tip[0].offsetHeight;

        switch (inside ? placement.split(' ')[1] : placement) {
          case 'bottom':
            tp = {top: pos.top + pos.height + this.options.topOffset, left: pos.left + pos.width / 2 - actualWidth / 2};
            break;
          case 'bottom left':
            tp = {top: pos.top + pos.height + this.options.topOffset, left: pos.left + this.options.leftOffset};
            break;
          case 'bottom right':
            tp = {top: pos.top + pos.height + this.options.topOffset , left: (pos.left + pos.width) - actualWidth - this.options.leftOffset };
            break;
          case 'top':
            tp = {top: pos.top - actualHeight + this.options.topOffset, left: pos.left + (pos.width / 2 - actualWidth / 2) + this.options.leftOffset};
            break;
          case 'top right':
            tp = {top: pos.top - actualHeight + this.options.topOffset, left: (pos.left + pos.width) - actualWidth - this.options.leftOffset};
            break ;
          case 'top left':
            tp = {top: pos.top - actualHeight  + this.options.topOffset, left: pos.left + this.options.leftOffset};
            break;
          case 'left':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth};
            break;
          case 'right':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width};
            break;
        }

        $tip
          .css(tp)
          .addClass(placement)
          .addClass('in');
          
          if(this.options.fixed == true) {
          	$tip.css("position","fixed");	
          }
      }
          this.options.onShow();
    }
  , getFooter: function () {
      var footer
        , $e = this.$element
        , o = this.options;

      footer = $e.attr('data-footer')
        || (typeof o.content == 'function' ? o.footer.call($e[0]) :  o.footer);

      footer = footer.toString().replace(/(^\s*|\s*$)/, "");

      return footer;
    }

  })


 /* POPOVER PLUGIN DEFINITION
  * ======================= */

  $.fn.popoverext = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('popoverext')
        , options = typeof option == 'object' && option;
      if (!data) $this.data('popoverext', (data = new PopoverExt(this, options)))
      if (typeof option == 'string') data[option]();
    })
  }

  $.fn.popoverext.Constructor = PopoverExt

  $.fn.popoverext.defaults = $.extend({} , $.fn.popover.defaults, {
  	fixed: false,
  	template: '<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div><div class="popover-footer"></div></div></div>',
  	id: false,
  	footer: '',
    onShow:$.empty,
    leftOffset: 0,
    topOffset: 0,
    hideOnBlur: false
  })

}( window.jQuery );
/* End of File include/javascript/jquery/jquery.popoverext.js */

/*!
 * jQuery UI Effects Bounce 1.8.21
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Bounce
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function( $, undefined ) {

    $.effects.custombounce = function(o) {

        return this.queue(function() {

            // Create element
            var el = $(this), props = ['position','top','bottom','left','right'];
            // Set options
            var mode = $.effects.setMode(el, o.options.mode || 'effect'); // Set Mode
            var direction = o.options.direction || 'up'; // Default direction
            var gravity = (o.options.gravity == "undefined") ? true : o.options.gravity ; // Default direction
            var distance = o.options.distance || 20; // Default distance
            var times = o.options.times || 5; // Default # of times
            var speed = o.duration || 250; // Default speed per bounce
            if (/show|hide/.test(mode)) props.push('opacity'); // Avoid touching opacity to prevent clearType and PNG issues in IE

            // Adjust
            $.effects.save(el, props); el.show(); // Save & Show
            $.effects.createWrapper(el); // Create Wrapper
            var ref ,ref2, motion;

            if(direction == 'up' || direction == 'down') {
                ref = 'top';
            } else if(direction == 'up right' || direction == 'down right' || direction == 'up left' || direction == 'down left') {
                ref = 'top';
                ref2 = 'left';
            }  else {
                ref = 'left';
            }

            var motion = (direction == 'up' || direction == 'left') ? 'pos' : 'neg';

            if (direction == "up" || direction == "left") {
                 motion = "pos";
            } else {
                 motion = "neg";
            }
            var distance = o.options.distance || (ref == 'top' ? el.outerHeight({margin:true}) / 3 : el.outerWidth({margin:true}) / 3);
            if (mode == 'show') el.css('opacity', 0).css(ref, motion == 'pos' ? -distance : distance); // Shift
            if (mode == 'hide') distance = distance / (times * 2);
            if (mode != 'hide') times--;

            // Animate
            if (mode == 'show') { // Show Bounce
                var animation = {opacity: 1};
                animation[ref] = (motion == 'pos' ? '+=' : '-=') + distance;
                el.animate(animation, speed / 2, o.options.easing);
                distance = distance / 2;
                times--;
            };
            for (var i = 0; i < times; i++) { // Bounces
                var animation1 = {}, animation2 = {};

                animation1[ref] = (motion == 'pos' ? '-=' : '+=') + distance;
                animation2[ref] = (motion == 'pos' ? '+=' : '-=') + distance;           
                var rtl = rtl == "undefined" ? false : rtl;
                if(ref2 != "undefined") {
                    if(!rtl) {
                        if(direction == "up right" || direction == "down left")   {
                            animation1[ref2] = (motion == 'pos' ? '-=' : '+=') + distance;
                            animation2[ref2] = (motion == 'pos' ? '+=' : '-=') + distance;
                        } else {
                            animation1[ref2] = (motion == 'pos' ? '+=' : '-=') + distance;
                            animation2[ref2] = (motion == 'pos' ? '-=' : '+=') + distance;
                        }
                    } else {
                        if(direction == "down right" || direction == "up left")   {
                            animation1[ref2] = (motion == 'pos' ? '-=' : '+=') + distance;
                            animation2[ref2] = (motion == 'pos' ? '+=' : '-=') + distance;
                        } else {
                            animation1[ref2] = (motion == 'pos' ? '+=' : '-=') + distance;
                            animation2[ref2] = (motion == 'pos' ? '-=' : '+=') + distance;
                        }
                    }

                }
                el.animate(animation1, speed / 2, o.options.easing).animate(animation2, speed / 2, o.options.easing);
                if(gravity) {
                    distance = (mode == 'hide') ? distance * 2 : distance / 2;
                }

//                console.log(distance)
            };
            if (mode == 'hide') { // Last Bounce
                var animation = {opacity: 0};
                animation[ref] = (motion == 'pos' ? '-=' : '+=')  + distance;
                el.animate(animation, speed / 2, o.options.easing, function(){
                    el.hide(); // Hide
                    $.effects.restore(el, props); $.effects.removeWrapper(el); // Restore
                    if(o.callback) o.callback.apply(this, arguments); // Callback
                });
            } else {
                var animation1 = {}, animation2 = {};
                animation1[ref] = (motion == 'pos' ? '-=' : '+=') + distance;
                animation2[ref] = (motion == 'pos' ? '+=' : '-=') + distance;
                if(ref2 != "undefined") {
                    animation1[ref2] = (motion == 'pos' ? '+=' : '-=') + distance;
                    animation2[ref2] = (motion == 'pos' ? '-=' : '+=') + distance;
                }
                el.animate(animation1, speed / 2, o.options.easing).animate(animation2, speed / 2, o.options.easing, function(){
                    $.effects.restore(el, props); $.effects.removeWrapper(el); // Restore
                    if(o.callback) o.callback.apply(this, arguments); // Callback
                });
            };
            el.queue('fx', function() { el.dequeue(); });
            el.dequeue();
        });

    };

})(jQuery);
/* End of File include/javascript/jquery/jquery.effects.custombounce.js */

